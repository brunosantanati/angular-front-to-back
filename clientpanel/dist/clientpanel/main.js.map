{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-client/add-client.component.ts","./src/app/components/add-client/add-client.component.html","./src/app/components/client-details/client-details.component.ts","./src/app/components/client-details/client-details.component.html","./src/app/components/clients/clients.component.ts","./src/app/components/clients/clients.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/edit-client/edit-client.component.ts","./src/app/components/edit-client/edit-client.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/guards/auth.guard.ts","./src/app/guards/register.guard.ts","./src/app/services/auth.service.ts","./src/app/services/client.service.ts","./src/app/services/settings.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEwB;AACZ;AACS;AACK;AACG;AACS;AACjB;AACE;AAC9B;AACQ;;;AAExD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4FAAkB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAClE,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE,WAAW,EAAC,CAAC,qEAAa,CAAC,EAAC;IAC7E,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,8FAAkB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAC5E,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,iGAAmB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAClF,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,0GAAsB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IAChF,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAC;IACzE,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,2FAAiB,EAAC;CAC3C,CAAC;AAOK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,mBAFhB,CAAC,6DAAS,EAAE,qEAAa,CAAC,YAF5B,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAGX,gBAAgB,uFAHjB,4DAAY;6FAGX,gBAAgB;cAL5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;gBACvB,SAAS,EAAE,CAAC,6DAAS,EAAE,qEAAa,CAAC;aACtC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,yEACE;QAAA,4EAAiC;QACjC,2EAA+B;QACjC,4DAAM;;6FDGO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACiB;AAEJ;AACT;AACe;AACN;AAEF;AACT;AACwB;AACS;AACN;AACA;AACQ;AACG;AACS;AAC1B;AACS;AACA;AACE;AACrB;AACJ;AACQ;;;;AAiCvD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAPT;QACT,uEAAa;QACb,mEAAW;QACX,2EAAe;KAChB,YAbQ;YACP,uEAAa;YACb,0DAAW;YACX,2EAAmB,CAAC,OAAO,EAAE;YAC7B,oEAAgB;YAChB,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,EAAE,aAAa,CAAC;YACpE,6EAAsB;YACtB,uEAAqB;SACtB;mIAQU,SAAS,mBA7BlB,2DAAY;QACZ,oFAAe;QACf,6FAAkB;QAClB,uFAAgB;QAChB,uFAAgB;QAChB,+FAAkB;QAClB,kGAAmB;QACnB,2GAAsB;QACtB,iFAAc;QACd,0FAAiB;QACjB,0FAAiB;QACjB,4FAAiB,aAGjB,uEAAa;QACb,0DAAW,+EAEX,oEAAgB,kEAEhB,6EAAsB;QACtB,uEAAqB;6FASZ,SAAS;cA/BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oFAAe;oBACf,6FAAkB;oBAClB,uFAAgB;oBAChB,uFAAgB;oBAChB,+FAAkB;oBAClB,kGAAmB;oBACnB,2GAAsB;oBACtB,iFAAc;oBACd,0FAAiB;oBACjB,0FAAiB;oBACjB,4FAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,2EAAmB,CAAC,OAAO,EAAE;oBAC7B,oEAAgB;oBAChB,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,EAAE,aAAa,CAAC;oBACpE,6EAAsB;oBACtB,uEAAqB;iBACtB;gBACD,SAAS,EAAE;oBACT,uEAAa;oBACb,mEAAW;oBACX,2EAAe;iBAChB;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;;AAYtD,MAAM,kBAAkB;IAa7B,YACU,YAAkC,EAClC,aAA4B,EAC5B,MAAc,EACd,eAAgC;QAHhC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAf1C,WAAM,GAAW;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,CAAC;SACX;IAUG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,mBAAmB,CAAC;IACpF,CAAC;IAED,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAkC;QACtD,2BAA2B;QAC3B,IAAG,IAAI,CAAC,mBAAmB,EAAC;YAC1B,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;SACnB;QAED,IAAG,CAAC,KAAK,EAAC;YACR,aAAa;YACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oCAAoC,EAAE;gBAC3D,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI;aACxC,CAAC,CAAC;SACJ;aAAI;YACH,iBAAiB;YACjB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpC,eAAe;YACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBACzC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;aACzC,CAAC,CAAC;YACH,mBAAmB;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;;oFA7CU,kBAAkB;kGAAlB,kBAAkB;;;;;;;QCZ/B,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,kEAAyC;QAAC,8EAC9C;QAAA,4DAAI;QACR,4DAAM;QACN,oEAEM;QACV,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,uEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,8EACI;QADuB,4RAAY,iBAAoB,IAAC;QACxD,0EACI;QAAA,6EAAuB;QAAA,sEAAU;QAAA,4DAAQ;QACzC,iFAWA;QALI,iMAA8B;QANlC,4DAWA;QAAA,2EACI;QAAA,iFACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,2FACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,iFAWA;QALI,gMAA6B;QANjC,4DAWA;QAAA,2EACI;QAAA,gFACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,2FACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,iFAWA;QALI,6LAA0B;QAN9B,4DAWA;QAAA,2EACI;QAAA,4EACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,gFACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,iFAUA;QANI,6LAA0B;QAJ9B,4DAUA;QAAA,2EACI;QAAA,+EACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,4FACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,iFAQJ;QALQ,+LAA4B;QAHhC,4DAQJ;QAAA,4DAAM;QAEN,wEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;;QA/Fc,2DAA4E;QAA5E,sKAA4E;QAM3E,0DAA4C;QAA5C,sHAA4C;QAI5C,0DAA6C;QAA7C,uHAA6C;QAY9C,0DAA0E;QAA1E,sKAA0E;QAMzE,0DAA2C;QAA3C,sHAA2C;QAI3C,0DAA4C;QAA5C,uHAA4C;QAY7C,0DAAoE;QAApE,sKAAoE;QAMnE,0DAAwC;QAAxC,sHAAwC;QAIxC,0DAAuC;QAAvC,qHAAuC;QAUxC,0DAAoE;QAApE,sKAAoE;QAOnE,0DAAwC;QAAxC,sHAAwC;QAIxC,0DAAyC;QAAzC,uHAAyC;QAU1C,0DAA4B;QAA5B,uFAA4B;;6FDjGnC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;sWAY0B,IAAI;kBAA5B,uDAAS;mBAAC,YAAY;;;;;;;;;;;;;;AEvBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICsC1B,2EACI;IADiC,wUAA0B;IAC3D,0EACI;IAAA,4EACA;IADuD,qWAA4B;IAAnF,4DACA;IAAA,2EACI;IAAA,6EAA8C;IAAA,iEAAM;IAAA,4DAAS;IACjE,4DAAO;IACX,4DAAM;IACV,4DAAO;;;IALwD,0DAA4B;IAA5B,0FAA4B;;;;IAxBnH,yEACI;IAAA,wEAAwB;IAAA,uDAA4C;IAAA,4DAAK;IACzE,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,qEAAI;IAAA,uDAA0B;IAAA,4DAAK;IACvC,4DAAM;IACN,0EACI;IAAA,yEACI;IAAA,qEACA;IAAA,wEAII;IAAA,wDACJ;;IAAA,4DAAO;IACP,yEACI;IAAA,yEACI;IADD,mWAA0D;IACzD,oEAA4B;IAChC,4DAAI;IACR,4DAAQ;IACR,2EACI;IAAA,8HACI;IAOR,4DAAM;IACV,4DAAK;IACT,4DAAM;IACV,4DAAM;IAEN,iEAEA;IAAA,0EACI;IAAA,0EAA4B;IAAA,wDAAiC;IAAA,4DAAK;IAClE,0EAA4B;IAAA,wDAAiC;IAAA,4DAAK;IACtE,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAzCsB,0DAA4C;IAA5C,8HAA4C;IAIpD,0DAA0B;IAA1B,qGAA0B;IAMtB,0DAAgC;IAAhC,2FAAgC;IAGhC,0DACJ;IADI,qLACJ;IAOU,0DAA8B;IAA9B,+FAA8B;IAgBpB,0DAAiC;IAAjC,4GAAiC;IACjC,0DAAiC;IAAjC,4GAAiC;;AD5ClE,MAAM,sBAAsB;IAOjC,YACU,aAA4B,EAC5B,MAAc,EACd,KAAqB,EACrB,YAAkC;QAHlC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAsB;QAP5C,eAAU,GAAY,KAAK,CAAC;QAC5B,2BAAsB,GAAY,KAAK,CAAC;IAOpC,CAAC;IAEL,QAAQ;QACN,kBAAkB;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,IAAG,MAAM,IAAI,IAAI,EAAC;gBAChB,IAAG,MAAM,CAAC,OAAO,GAAG,CAAC,EAAC;oBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;aACF;YAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACxC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;SACzC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAG,OAAO,CAAC,eAAe,CAAC,EAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACvC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;aACzC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;;4FA3CU,sBAAsB;sGAAtB,sBAAsB;QCXnC,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,kEAAyC;QAAC,8EAC9C;QAAA,4DAAI;QACR,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,iEACJ;QAAA,4DAAI;QACJ,4EAAyD;QAAjD,8IAAS,mBAAe,IAAC;QAAwB,kEAAM;QAAA,4DAAS;QAC5E,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,sHACI;;QATW,0DAAkC;QAAlC,+GAAkC;QAQ5C,0DAAc;QAAd,4EAAc;;6FDLN,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICgB1C,qEACI;IAAA,qEAAI;IAAA,uDAA4C;IAAA,4DAAK;IACrD,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAA8C;;IAAA,4DAAK;IACvD,qEACI;IAAA,uEACI;IAAA,oEAA0C;IAAC,qEAC/C;IAAA,4DAAI;IACR,4DAAK;IACT,4DAAK;;;IARG,0DAA4C;IAA5C,sHAA4C;IAC5C,0DAAkB;IAAlB,gFAAkB;IAClB,0DAA8C;IAA9C,oKAA8C;IAE3C,0DAAmC;IAAnC,+GAAmC;;;IAbtD,2EACI;IAAA,2EACI;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IACd,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IAChB,gEAAS;IACb,4DAAQ;IACR,wEACI;IAAA,qHACI;IASR,4DAAQ;IACZ,4DAAQ;;;IAXI,2DAA8B;IAA9B,mFAA8B;;;IActC,gEACA;IAAA,qEAAI;IAAA,6FAAkC;IAAA,4DAAK;;ADtBxC,MAAM,gBAAgB;IAI3B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAClD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACrD,OAAO,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvD,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;QCT7B,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,kEAA2B;QAAA,kEAAO;QAAA,4DAAK;QAC/C,4DAAM;QACN,yEACI;QAAA,wEAAsC;QAAA,uDAAqD;;QAAA,4DAAK;QACpG,4DAAM;QACV,4DAAM;QACN,iHACI;QAoBJ,0MACI;;;QAzB0C,0DAAqD;QAArD,qLAAqD;QAG5F,0DAA0C;QAA1C,uHAA0C;;6FDCpC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEACI;QAAA,yEACI;QAAA,yEAA2B;QAC/B,4DAAM;QACN,yEACI;QAAA,yEAA2B;QAC/B,4DAAM;QACV,4DAAM;;6FDAO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;AAY3C,MAAM,mBAAmB;IAY9B,YACU,aAA4B,EAC5B,MAAc,EACd,KAAqB,EACrB,YAAkC,EAClC,eAAgC;QAJhC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAsB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAd1C,WAAM,GAAW;YACf,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,CAAC;SACX;IASG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,oBAAoB,CAAC;QACpF,kBAAkB;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,aAAa;QACb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IAClF,CAAC;IAED,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAkC;QACtD,IAAG,CAAC,KAAK,EAAC;YACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oCAAoC,EAAE;gBAC3D,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI;aACxC,CAAC,CAAC;SACJ;aAAI;YACH,mBAAmB;YACnB,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACnB,gBAAgB;YAChB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACvC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;aACzC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5C;IACH,CAAC;;sFA3CU,mBAAmB;mGAAnB,mBAAmB;;QCZhC,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,kEAAyC;QAAC,2EAC9C;QAAA,4DAAI;QACR,4DAAM;QACN,oEAEM;QACV,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,wEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,8EACI;QADuB,6RAAY,iBAAoB,IAAC;QACxD,0EACI;QAAA,6EAAuB;QAAA,sEAAU;QAAA,4DAAQ;QACzC,iFAWA;QALI,kMAA8B;QANlC,4DAWA;QAAA,2EACI;QAAA,iFACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,2FACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,iFAWA;QALI,iMAA6B;QANjC,4DAWA;QAAA,2EACI;QAAA,gFACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,2FACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,iFAWA;QALI,8LAA0B;QAN9B,4DAWA;QAAA,2EACI;QAAA,4EACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,gFACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,iFAUA;QANI,8LAA0B;QAJ9B,4DAUA;QAAA,2EACI;QAAA,+EACJ;QAAA,4DAAM;QAEN,2EACI;QAAA,4FACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,6EAAqB;QAAA,mEAAO;QAAA,4DAAQ;QACpC,iFAQJ;QALQ,gMAA4B;QAHhC,4DAQJ;QAAA,4DAAM;QAEN,wEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;;QArHK,0DAA6B;QAA7B,0GAA6B;QAsBpB,2DAA4E;QAA5E,sKAA4E;QAM3E,0DAA4C;QAA5C,sHAA4C;QAI5C,0DAA6C;QAA7C,uHAA6C;QAY9C,0DAA0E;QAA1E,sKAA0E;QAMzE,0DAA2C;QAA3C,sHAA2C;QAI3C,0DAA4C;QAA5C,uHAA4C;QAY7C,0DAAoE;QAApE,sKAAoE;QAMnE,0DAAwC;QAAxC,sHAAwC;QAIxC,0DAAuC;QAAvC,qHAAuC;QAUxC,0DAAoE;QAApE,sKAAoE;QAOnE,0DAAwC;QAAxC,sHAAwC;QAIxC,0DAAyC;QAAzC,uHAAyC;QAU1C,0DAA4B;QAA5B,uFAA4B;;6FDjGnC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,cAAc;IAKzB,YACU,WAAwB,EACxB,MAAc,EACd,YAAkC;QAFlC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAsB;IACxC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAG,IAAI,EAAC;gBACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC9C,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,EAAE;gBAC9C,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;aACzC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBAClC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI;aACxC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;4EAhCU,cAAc;8FAAd,cAAc;QCV3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEACI;QAAA,0EAA2B;QAAA,kEAA0B;QAAC,wEAAY;QAAA,4DAAO;QAAC,kEAC9E;QAAA,4DAAK;QACL,0EACI;QADE,sIAAU,cAAU,IAAC;QACvB,0EACI;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,6EACJ;QADqC,kLAAmB;QAApD,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6EACJ;QAD2C,qLAAsB;QAA7D,4DACJ;QAAA,4DAAM;QACN,wEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAXmD,2DAAmB;QAAnB,8EAAmB;QAIb,0DAAsB;QAAtB,iFAAsB;;6FDJxE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICclC,wEACI;IAAA,wEAA2C;IAAA,mEAAQ;IAAA,4DAAI;IAC3D,4DAAK;;;IACL,wEACI;IAAA,wEAAwC;IAAA,gEAAK;IAAA,4DAAI;IACrD,4DAAK;;;IACL,wEACI;IAAA,wEAA6B;IAAA,uDAAkB;IAAA,4DAAI;IACvD,4DAAK;;;IAD4B,0DAAkB;IAAlB,oFAAkB;;;IAEnD,wEACI;IAAA,wEAA2C;IAAA,kEAAO;IAAA,4DAAI;IAC1D,4DAAK;;;;IACL,wEACI;IAAA,wEAAuD;IAA3C,kTAAyB;IAAkB,iEAAM;IAAA,4DAAI;IACrE,4DAAK;;ADhBd,MAAM,eAAe;IAM1B,YACU,WAAwB,EACxB,MAAc,EACd,YAAkC,EAClC,eAAgC;QAHhC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAsB;QAClC,oBAAe,GAAf,eAAe,CAAiB;IACtC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAG,IAAI,EAAC;gBACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;aAChC;iBAAI;gBACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,iBAAiB,CAAC;IAC3E,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAC/C,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;;8EAhCU,eAAe;+FAAf,eAAe;QCZ5B,yEACI;QAAA,yEACI;QAAA,uEAAuC;QAAA,sEAAW;QAAA,4DAAI;QACtD,4EACI;QAAA,qEAAyC;QAC7C,4DAAS;QACT,yEACI;QAAA,wEACI;QAAA,wEACI;QAAA,uEAAmC;QAAA,qEAAS;QAAA,4DAAI;QACpD,4DAAK;QACT,4DAAK;QAEL,yEACI;QAAA,4GACI;QAEJ,4GACI;QAEJ,4GACI;QAEJ,4GACI;QAEJ,4GACI;QAER,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlBc,2DAAmC;QAAnC,qGAAmC;QAGnC,0DAAmC;QAAnC,qGAAmC;QAGnC,0DAAkB;QAAlB,gFAAkB;QAGlB,0DAAkB;QAAlB,gFAAkB;QAGlB,0DAAkB;QAAlB,gFAAkB;;6FDdzB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;6FDOV,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,iBAAiB;IAK5B,YACU,WAAwB,EACxB,MAAc,EACd,YAAkC;QAFlC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAsB;IACxC,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;aACjD,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sCAAsC,EAAE;gBAC7D,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;aACzC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBAClC,QAAQ,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI;aACxC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;kFA3BU,iBAAiB;iGAAjB,iBAAiB;QCV9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEACI;QAAA,0EAA2B;QAAA,kEAA0B;QAAC,wEAAY;QAAA,4DAAO;QAAC,qEAC9E;QAAA,4DAAK;QACL,0EACI;QADE,yIAAU,cAAU,IAAC;QACvB,0EACI;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,6EACJ;QADqC,qLAAmB;QAApD,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6EACJ;QAD2C,wLAAsB;QAA7D,4DACJ;QAAA,4DAAM;QACN,wEACJ;QAAA,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAXmD,2DAAmB;QAAnB,8EAAmB;QAIb,0DAAsB;QAAtB,iFAAsB;;6FDJxE,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,iBAAiB;IAI5B,YACU,YAAkC,EAClC,eAAgC;QADhC,iBAAY,GAAZ,YAAY,CAAsB;QAClC,oBAAe,GAAf,eAAe,CAAiB;IACtC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACrD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACvC,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI;SACzC,CAAC,CAAC;IACL,CAAC;;kFAlBU,iBAAiB;iGAAjB,iBAAiB;QCV9B,yEACI;QAAA,yEACE;QAAA,uEACE;QAAA,kEAAyC;QAAC,8EAC5C;QAAA,4DAAI;QACN,4DAAM;QACN,oEAA4B;QAC9B,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,0EACF;QAAA,4DAAM;QACN,yEACE;QAAA,2EACE;QADI,0IAAU,cAAU,IAAC;QACzB,0EACE;QAAA,yEAAO;QAAA,8EAAkB;QAAA,4DAAQ;QACjC,4EACF;QADyF,+MAAmE;QAA1J,4DACF;QAAA,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,kFAAsB;QAAA,4DAAQ;QACrC,6EACF;QAD6F,mNAAuE;QAAlK,4DACF;QAAA,4DAAM;QAEN,0EACI;QAAA,yEAAO;QAAA,mFAAuB;QAAA,4DAAQ;QACtC,6EACF;QAD+F,qNAAyE;QAAtK,4DACF;QAAA,4DAAM;QAER,wEACJ;QAAA,4DAAO;QACT,4DAAM;QACR,4DAAM;;QAhBkD,2DAAsC;QAAtC,mGAAsC;QAKlC,0DAAwC;QAAxC,qGAAwC;QAKrC,0DAAyC;QAAzC,sGAAyC;;6FDjB7F,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,uEACI;QAAA,kEAA0B;QAAC,iEAC/B;QAAA,4DAAI;;6FDKS,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIN;;;;AAG9B,MAAM,SAAS;IAClB,YACY,MAAc,EACd,MAAuB;QADvB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAiB;IACjC,CAAC;IAEH,WAAW;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACzC,IAAG,CAAC,IAAI,EAAC;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,OAAO,KAAK,CAAC;aAChB;iBAAI;gBACD,OAAO,IAAI,CAAC;aACf;QACL,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;kEAfQ,SAAS;4FAAT,SAAS,WAAT,SAAS;6FAAT,SAAS;cADrB,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAKpC,MAAM,aAAa;IACtB,YACY,MAAc,EACd,eAAgC;QADhC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;IAC1C,CAAC;IAEH,WAAW;QACP,IAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAC;YACpD,OAAO,IAAI,CAAC;SACf;aAAI;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;;0EAbQ,aAAa;gGAAb,aAAa,WAAb,aAAa;6FAAb,aAAa;cADzB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;;;AAK9B,MAAM,WAAW;IAEtB,YAAoB,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;IAAI,CAAC;IAEhD,KAAK,CAAC,KAAa,EAAE,QAAgB;QACnC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;iBACzD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAa,EAAE,QAAgB;QACtC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC;iBAC7D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;;sEAxBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;;;AAM9B,MAAM,aAAa;IAOxB,YAAoB,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;QACvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IACjG,CAAC;IAED,UAAU;QACR,0BAA0B;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE;YACzE,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAY,CAAC;gBACjD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAS,WAAW,EAAE,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,MAAM,CAAC,EAAE;YAC/D,IAAG,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,KAAK,EAAC;gBACjC,OAAO,IAAI,CAAC;aACb;iBAAI;gBACH,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAY,CAAC;gBAC7C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC5B,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;;0EAnDU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA2C;;AAMpC,MAAM,eAAe;IAQ1B;QANA,aAAQ,GAAa;YACnB,iBAAiB,EAAE,IAAI;YACvB,mBAAmB,EAAE,KAAK;YAC1B,oBAAoB,EAAE,KAAK;SAC5B;QAGC,IAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7D,CAAC;;8EApBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,uCAAuC;QACnD,SAAS,EAAE,uBAAuB;QAClC,aAAa,EAAE,mCAAmC;QAClD,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACxBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component'\nimport { LoginComponent } from './components/login/login.component'\nimport { RegisterComponent } from './components/register/register.component'\nimport { AddClientComponent } from './components/add-client/add-client.component'\nimport { EditClientComponent } from './components/edit-client/edit-client.component'\nimport { ClientDetailsComponent } from './components/client-details/client-details.component'\nimport { SettingsComponent } from './components/settings/settings.component'\nimport { NotFoundComponent } from './components/not-found/not-found.component'\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterGuard } from './guards/register.guard';\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent, canActivate:[RegisterGuard]},\n  {path: 'client/add', component: AddClientComponent, canActivate:[AuthGuard]},\n  {path: 'client/edit/:id', component: EditClientComponent, canActivate:[AuthGuard]},\n  {path: 'client/:id', component: ClientDetailsComponent, canActivate:[AuthGuard]},\n  {path: 'settings', component: SettingsComponent, canActivate:[AuthGuard]},\n  {path: '**', component: NotFoundComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard, RegisterGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'clientpanel';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/Forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { ClientService } from './services/client.service';\nimport { AuthService } from './services/auth.service';\nimport { SettingsService } from './services/settings.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, 'clientpanel'),\n    AngularFirestoreModule,\n    AngularFireAuthModule\n  ],\n  providers: [\n    ClientService,\n    AuthService,\n    SettingsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ClientService } from '../../services/client.service';\nimport { Router } from '@angular/router';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.scss']\n})\nexport class AddClientComponent implements OnInit {\n\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  }\n\n  disableBalanceOnAdd: boolean;\n  @ViewChild('clientForm') form: any;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private clientService: ClientService,\n    private router: Router,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit(): void {\n    this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalanceOnAdd;\n  }\n\n  onSubmit({value, valid}: {value: Client, valid: boolean}){\n    //console.log(value, valid)\n    if(this.disableBalanceOnAdd){\n      value.balance = 0;\n    }\n\n    if(!valid){\n      // Show error\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    }else{\n      // Add new client\n      this.clientService.newClient(value);\n      // Show message\n      this.flashMessage.show('New client added', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      // Redirect to dash\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink=\"/\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n        </a>\n    </div>\n    <div class=\"col-md-6\">\n        \n    </div>\n</div>\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        Add Client\n    </div>\n    <div class=\"card-body\">\n        <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"firstName\"\n                    #clientFirstName=\"ngModel\"\n                    [ngClass]=\"{'is-invalid':clientFirstName.errors && clientFirstName.touched}\"\n                    [(ngModel)]=\"client.firstName\"\n                    minlength=\"2\"\n                    required\n                >\n        \n                <div [hidden]=\"!clientFirstName.errors?.required\" class=\"invalid-feedback\">\n                    First name required\n                </div>\n        \n                <div [hidden]=\"!clientFirstName.errors?.minlength\" class=\"invalid-feedback\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"lastName\"\n                    #clientLastName=\"ngModel\"\n                    [ngClass]=\"{'is-invalid':clientLastName.errors && clientLastName.touched}\"\n                    [(ngModel)]=\"client.lastName\"\n                    minlength=\"2\"\n                    required\n                >\n        \n                <div [hidden]=\"!clientLastName.errors?.required\" class=\"invalid-feedback\">\n                    Last name required\n                </div>\n        \n                <div [hidden]=\"!clientLastName.errors?.minlength\" class=\"invalid-feedback\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"email\"\n                    #clientEmail=\"ngModel\"\n                    [ngClass]=\"{'is-invalid':clientEmail.errors && clientEmail.touched}\"\n                    [(ngModel)]=\"client.email\"\n                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                    required\n                >\n        \n                <div [hidden]=\"!clientEmail.errors?.required\" class=\"invalid-feedback\">\n                    Email required\n                </div>\n        \n                <div [hidden]=\"!clientEmail.errors?.pattern\" class=\"invalid-feedback\">\n                    Email is not valid\n                </div>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    [ngClass]=\"{'is-invalid':clientPhone.errors && clientPhone.touched}\"\n                    [(ngModel)]=\"client.phone\"\n                    name=\"phone\"\n                    #clientPhone = \"ngModel\"\n                    minlength=\"10\"\n                    required\n                >\n                <div [hidden]=\"!clientPhone.errors?.required\" class=\"invalid-feedback\">\n                    Phone is required\n                </div>\n            \n                <div [hidden]=\"!clientPhone.errors?.minlength\" class=\"invalid-feedback\">\n                    Must be at least 10 characters\n                </div>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"balance\">Balance</label>\n                <input \n                    type=\"number\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"client.balance\"\n                    name=\"balance\"\n                    #clientBalance = \"ngModel\"\n                    [disabled]=\"disableBalanceOnAdd\"\n                >\n            </div>\n      \n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\">\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.scss']\n})\nexport class ClientDetailsComponent implements OnInit {\n\n  id: string;\n  client: Client;\n  hasBalance: boolean = false;\n  showBalanceUpdateInput: boolean = false;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    this.clientService.getClient(this.id).subscribe(client => {\n      if(client != null){\n        if(client.balance > 0){\n          this.hasBalance = true;\n        }\n      }\n\n      this.client = client;\n    });\n  }\n\n  updateBalance(){\n    this.clientService.updateClient(this.client);\n    this.flashMessage.show('Balance updated', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n  }\n\n  onDeleteClick(){\n    if(confirm('Are you sure?')){\n      this.clientService.deleteClient(this.client);\n      this.flashMessage.show('Client removed', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink=\"/\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n        </a>\n    </div>\n    <div class=\"col-md-6\">\n        <div class=\"btn-group pull-right\">\n            <a routerLink=\"/client/edit/{{ id }}\" class=\"btn btn-dark\">\n                Edit\n            </a>\n            <button (click)=\"onDeleteClick()\" class=\"btn btn-danger\">Delete</button>\n        </div>\n    </div>\n</div>\n<hr>\n<div *ngIf=\"client\" class=\"card\">\n    <h3 class=\"card-header\">{{ client.firstName }} {{ client.lastName }}</h3>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"cold-md-8 col-sm-6\">\n                <h4>Client ID: {{ client.id }}</h4>\n            </div>\n            <div class=\"cold-md-8 col-sm-6\">\n                <h3 class=\"pull-right\">\n                    Balance\n                    <span\n                        [class.text-danger]=\"hasBalance\"\n                        [class.text-success]=\"!hasBalance\"\n                    >\n                        {{ client.balance | currency:\"USD\":\"symbol\" }}\n                    </span>\n                    <small>\n                        <a (click)=\"showBalanceUpdateInput = !showBalanceUpdateInput\">\n                            <i class=\"fa fa-pencil\"></i>\n                        </a>\n                    </small>\n                    <div class=\"clearfix\">\n                        <form *ngIf=\"showBalanceUpdateInput\" (submit)=\"updateBalance()\">\n                            <div class=\"input-group\">\n                                <input type=\"text\" name=\"balance\" class=\"form-control\" [(ngModel)]=\"client.balance\">\n                                <span class=\"input-group-btn\">\n                                    <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n                                </span>\n                            </div>\n                        </form>\n                    </div>\n                </h3>\n            </div>\n        </div>\n\n        <hr>\n\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Contact Email: {{ client.email }}</li>\n            <li class=\"list-group-item\">Contact Phone: {{ client.phone }}</li>\n        </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n  totalOwed: number;\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit(): void {\n    this.clientService.getClients().subscribe(clients => { \n      this.clients = clients;\n      this.getTotalOwed();\n    });\n  }\n\n  getTotalOwed(){\n    this.totalOwed = this.clients.reduce((total, client) => {\n      return total + parseFloat(client.balance.toString());\n    }, 0);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <h2><i class=\"fa fa-users\"></i>Clients</h2>\n    </div>\n    <div class=\"col-md-6\">\n        <h5 class=\"text-right text-secondary\">Total Owed: {{ totalOwed | currency:\"USD\":\"symbol\" }}</h5>\n    </div>\n</div>\n<table *ngIf=\"clients?.length > 0;else noClients\" class=\"table table-striped\">\n    <thead class=\"thead-inverse\">\n        <th>Name</th>\n        <th>Email</th>\n        <th>Balance</th>\n        <th></th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let client of clients\">\n            <td>{{ client.firstName }} {{ client.lastName }}</td>\n            <td>{{ client.email }}</td>\n            <td>{{ client.balance | currency:\"USD\":\"symbol\" }}</td>\n            <td>\n                <a routerLink=\"client/{{ client.id }}\" class=\"btn btn-secondary btn-sm\">\n                    <i class=\"fa fa-arrow-circle-o-right\"></i> Details\n                </a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<ng-template #noClients>\n    <hr>\n    <h5>There are no clients in the system</h5>\n  </ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\r\n    <div class=\"col-md-10\">\r\n        <app-clients></app-clients>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n        <app-sidebar></app-sidebar>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.scss']\n})\nexport class EditClientComponent implements OnInit {\n\n  id: string;\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0\n  }\n  disableBalanceOnEdit: boolean;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit(): void {\n    this.disableBalanceOnEdit = this.settingsService.getSettings().disableBalanceOnEdit;\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe(client => this.client = client);\n  }\n\n  onSubmit({value, valid}: {value: Client, valid: boolean}){\n    if(!valid){\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    }else{\n      // Add id to Client\n      value.id = this.id;\n      // Update client\n      this.clientService.updateClient(value);\n      this.flashMessage.show('Client updated', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      this.router.navigate(['/client/'+this.id]);\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <a routerLink=\"/client/{{ id }}\" class=\"btn btn-link\">\n            <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Client\n        </a>\n    </div>\n    <div class=\"col-md-6\">\n        \n    </div>\n</div>\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        Edit Client\n    </div>\n    <div class=\"card-body\">\n        <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">First Name</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"firstName\"\n                    #clientFirstName=\"ngModel\"\n                    [ngClass]=\"{'is-invalid':clientFirstName.errors && clientFirstName.touched}\"\n                    [(ngModel)]=\"client.firstName\"\n                    minlength=\"2\"\n                    required\n                >\n        \n                <div [hidden]=\"!clientFirstName.errors?.required\" class=\"invalid-feedback\">\n                    First name required\n                </div>\n        \n                <div [hidden]=\"!clientFirstName.errors?.minlength\" class=\"invalid-feedback\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"lastName\">Last Name</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"lastName\"\n                    #clientLastName=\"ngModel\"\n                    [ngClass]=\"{'is-invalid':clientLastName.errors && clientLastName.touched}\"\n                    [(ngModel)]=\"client.lastName\"\n                    minlength=\"2\"\n                    required\n                >\n        \n                <div [hidden]=\"!clientLastName.errors?.required\" class=\"invalid-feedback\">\n                    Last name required\n                </div>\n        \n                <div [hidden]=\"!clientLastName.errors?.minlength\" class=\"invalid-feedback\">\n                    Must be at least 2 characters\n                </div>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"email\"\n                    #clientEmail=\"ngModel\"\n                    [ngClass]=\"{'is-invalid':clientEmail.errors && clientEmail.touched}\"\n                    [(ngModel)]=\"client.email\"\n                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                    required\n                >\n        \n                <div [hidden]=\"!clientEmail.errors?.required\" class=\"invalid-feedback\">\n                    Email required\n                </div>\n        \n                <div [hidden]=\"!clientEmail.errors?.pattern\" class=\"invalid-feedback\">\n                    Email is not valid\n                </div>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"phone\">Phone</label>\n                <input \n                    type=\"text\"\n                    class=\"form-control\"\n                    [ngClass]=\"{'is-invalid':clientPhone.errors && clientPhone.touched}\"\n                    [(ngModel)]=\"client.phone\"\n                    name=\"phone\"\n                    #clientPhone = \"ngModel\"\n                    minlength=\"10\"\n                    required\n                >\n                <div [hidden]=\"!clientPhone.errors?.required\" class=\"invalid-feedback\">\n                    Phone is required\n                </div>\n            \n                <div [hidden]=\"!clientPhone.errors?.minlength\" class=\"invalid-feedback\">\n                    Must be at least 10 characters\n                </div>\n            </div>\n      \n            <div class=\"form-group\">\n                <label for=\"balance\">Balance</label>\n                <input \n                    type=\"number\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"client.balance\"\n                    name=\"balance\"\n                    #clientBalance = \"ngModel\"\n                    [disabled]=\"disableBalanceOnEdit\"\n                >\n            </div>\n      \n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\">\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getAuth().subscribe(auth => {\n      if(auth){\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit(){\n    this.authService.login(this.email, this.password)\n      .then(res => {\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success', timeout: 4000\n        });\n        this.router.navigate(['/']);\n      })\n      .catch(err => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger', timeout: 4000\n        });\n      });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center pb-4 pt-3\">\n                    <span class=\"text-primary\"><i class=\"fa fa-lock\"></i> Client Panel</span> Login\n                </h1>\n                <form (submit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required>\n                    </div>\n                    <input type=\"submit\" value=\"Login\" class=\"btn btn-primary btn-block\">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  isLoggedIn: boolean;\n  loggedInUser: string;\n  showRegister: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getAuth().subscribe(auth => {\n      if(auth){\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n      }else{\n        this.isLoggedIn = false;\n      }\n    });\n\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are now logged out', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n    <div class=\"container\">\n        <a routerLink=\"/\" class=\"navbar-brand\">ClientPanel</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarMain\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a routerLink=\"/\" class=\"nav-link\">Dashboard</a>\n                </li>\n            </ul>\n\n            <ul class=\"navbar-nav ml-auto\">\n                <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n                    <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n                </li>\n                <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n                    <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n                </li>\n                <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                    <a href=\"#\" class=\"nav-link\">{{ loggedInUser }}</a>\n                </li>\n                <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                    <a routerLink=\"/settings\" class=\"nav-link\">Setting</a>\n                </li>\n                <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                    <a href=\"#\" (click)=\"onLogoutClick()\" class=\"nav-link\">Logout</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.authService.register(this.email, this.password)\n      .then(res => {\n        this.flashMessage.show('You are now registered and logged in', {\n          cssClass: 'alert-success', timeout: 4000\n        });\n        this.router.navigate(['/']);\n      })\n      .catch(err => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger', timeout: 4000\n        });\n      });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center pb-4 pt-3\">\n                    <span class=\"text-primary\"><i class=\"fa fa-lock\"></i> Client Panel</span> Register\n                </h1>\n                <form (submit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required>\n                    </div>\n                    <input type=\"submit\" value=\"Register\" class=\"btn btn-primary btn-block\">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\nimport { Settings } from '../../models/Settings';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  settings: Settings;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) { }\n\n  ngOnInit(): void {\n    this.settings = this.settingsService.getSettings();\n  }\n\n  onSubmit() {\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessage.show('Settings saved', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n      <a routerLink=\"/\" class=\"btn btn-link\">\n        <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n      </a>\n    </div>\n    <div class=\"col-md-6\"></div>\n  </div>\n  \n  <div class=\"card\">\n    <div class=\"card-header\">\n      Edit Settings\n    </div>\n    <div class=\"card-body\">\n      <form (submit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label>Allow Registration</label>\n          <input type=\"checkbox\" name=\"allowRegistration\" [checked]=\"settings.allowRegistration\" (change)=\"settings.allowRegistration = !settings.allowRegistration\">\n        </div>\n  \n        <div class=\"form-group\">\n            <label>Disable Balance On Add</label>\n            <input type=\"checkbox\" name=\"disableBalanceOnAdd\" [checked]=\"settings.disableBalanceOnAdd\" (change)=\"settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\">\n          </div>\n  \n          <div class=\"form-group\">\n              <label>Disable Balance On Edit</label>\n              <input type=\"checkbox\" name=\"disableBalanceOnEdit\" [checked]=\"settings.disableBalanceOnEdit\" (change)=\"settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\">\n            </div>\n  \n          <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\">\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a routerLink=\"/client/add\" class=\"btn btn-success btn-block\">\n    <i class=\"fa fa-plus\"></i> New\n</a>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private afAuth: AngularFireAuth\r\n    ){}\r\n\r\n    canActivate(): Observable<boolean>{\r\n        return this.afAuth.authState.pipe(map(auth => {\r\n            if(!auth){\r\n                this.router.navigate(['/login']);\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { SettingsService } from '../services/settings.service';\r\n\r\n@Injectable()\r\nexport class RegisterGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private settingsService: SettingsService\r\n    ){}\r\n\r\n    canActivate(): boolean{\r\n        if(this.settingsService.getSettings().allowRegistration){\r\n            return true;\r\n        }else{\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  login(email: string, password: string){\n    return new Promise((resolve, rejected) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData), err => rejected(err))\n    });\n  }\n\n  register(email: string, password: string){\n    return new Promise((resolve, rejected) => {\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n        .then(userData => resolve(userData), err => rejected(err))\n    });\n  }\n\n  getAuth(){\n    return this.afAuth.authState.pipe(map(auth => auth));\n  }\n\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport { Client } from '../models/Client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) {\n    this.clientsCollection = this.afs.collection('clients', ref => ref.orderBy('lastName', 'asc'));\n  }\n\n  getClients(): Observable<Client[]>{\n    // Get clients with the id\n    this.clients = this.clientsCollection.snapshotChanges().pipe(map(changes => {\n      return changes.map(action => {\n        const data = action.payload.doc.data() as Client;\n        data.id = action.payload.doc['id'];\n        return data;\n      });\n    }));\n\n    return this.clients;\n  }\n\n  newClient(client: Client){\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id: string): Observable<Client>{\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(map(action => {\n      if(action.payload.exists === false){\n        return null;\n      }else{\n        const data = action.payload.data() as Client;\n        data.id = action.payload.id;\n        return data;\n      }\n    }));\n\n    return this.client;\n  }\n\n  updateClient(client: Client){\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n\n  deleteClient(client: Client){\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Settings } from '../models/Settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalanceOnAdd: false,\n    disableBalanceOnEdit: false\n  }\n\n  constructor() { \n    if(localStorage.getItem('settings') != null) {\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n  }\n\n  getSettings(): Settings {\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings) {\n    localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBrq-8ZNWNYgHsPNnPH3uGz509CszzuwjY\",\n    authDomain: \"clientpanelprod-662e0.firebaseapp.com\",\n    projectId: \"clientpanelprod-662e0\",\n    storageBucket: \"clientpanelprod-662e0.appspot.com\",\n    messagingSenderId: \"994923641819\",\n    appId: \"1:994923641819:web:25cdbacebcf2269088c5fe\",\n    measurementId: \"G-T51CE3BX7C\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}